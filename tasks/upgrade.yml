---
- name: Upgrade Matomo
  block:

    - name: Matomo download tgz tasks included
      ansible.builtin.include_tasks: download.yml

    - name: Backup up the Matomo config file
      ansible.builtin.copy:
        remote_src: true
        src: "{{ matomo_html }}/config/config.ini.php"
        dest: "{{ matomo_private }}/config.ini.php.{{ ansible_date_time.date }}.{{ ansible_date_time.time }}.bak"
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
        mode: 0600

    - name: Required Matomo rsynced over last version
      ansible.builtin.command: "rsync -aq {{ matomo_private }}/matomo/ {{ matomo_html }}/"
      become: true
      become_user: "{{ matomo_user }}"

    - name: Matomo database upgraded
      ansible.builtin.command: php console --no-ansi -n core:update --yes
      args:
        chdir: "{{ matomo_html }}"
      register: matomo_core_update
      changed_when: ( "Everything is already up to date." not in matomo_core_update.stdout_lines )
      failed_when: ( "Matomo has been successfully updated!" not in matomo_core_update.stdout_lines ) and ( "Everything is already up to date." not in matomo_core_update.stdout_lines )
      become: true
      become_user: "{{ matomo_user }}"

    - name: Migrate token auths after upgrade from Matomo 3.x
      ansible.builtin.command: php console --no-ansi -n core:matomo4-migrate-token-auths
      args:
        chdir: "{{ matomo_html }}"
      become: true
      become_user: "{{ matomo_user }}"
      when: matomo_installed is version('3.14.1', '<=')

    - name: Convert database to utf8mb4 after upgrade from Matomo 3.x
      ansible.builtin.command: php console --no-ansi -n core:convert-to-utf8mb4
      args:
        chdir: "{{ matomo_html }}"
      become: true
      become_user: "{{ matomo_user }}"
      when: matomo_installed is version('3.14.1', '<=')

    - name: Get the installed Matomo version number
      ansible.builtin.command: php console --no-ansi -n core:update --version
      args:
        chdir: "{{ matomo_html }}"
      become: true
      become_user: "{{ matomo_user }}"
      changed_when: false
      check_mode: false
      register: matomo_installed_check

    - name: Set a variable for the installed Matomo version number
      ansible.builtin.set_fact:
        matomo_installed: "{{ matomo_installed_check.stdout.split(' ')[2] }}"

    - name: Print the installed version of Matomo
      ansible.builtin.debug:
        msg: "The installed version of Matomo is {{ matomo_installed }}"
        verbosity: 1

  tags:
    - matomo
...
