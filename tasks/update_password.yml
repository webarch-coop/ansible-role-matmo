# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Matomo Ansible role.
#
# The Webarchitects Matomo Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Matomo Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Matomo Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Update Matomo user account password for matomo_login_existing
  block:

    - name: Check variables
      ansible.builtin.assert:
        that:
          - ( matomo_login_existing is defined ) and ( matomo_login_existing is regex("^[a-zA-Z0-9-]{2,14}$") )
          - ( matomo_login_email is defined ) and ( matomo_login_email is regex("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$") )
          - ( matomo_accounts_file is defined )
          - ( matomo_token_auth is defined )
          - ( matomo_password is defined )
          - ( matomo_url is defined )
        msg: "Please ensure that all the required variables are defined"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Generate a random string for Matomo password
      ansible.builtin.command: "pwgen -n {{ 24 | random(14) }} 1"
      changed_when: false
      check_mode: false
      register: matomo_login_password_gen
      no_log: true

    - name: Set a variable with the random password
      ansible.builtin.set_fact:
        matomo_login_password: "{{ matomo_login_password_gen.stdout }}"
      no_log: true

    - name: "Update the Matomo password for {{ matomo_login_existing }} using the API"
      ansible.builtin.uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.updateUser
          userLogin: "{{ matomo_login_existing }}"
          passwordConfirmation: "{{ matomo_password }}"
          password: "{{ matomo_login_password }}"
        status_code: 200
        return_content: true
        use_netrc: false
      become: true
      become_user: "{{ matomo_user }}"
      delegate_to: "{{ inventory_hostname }}"
      register: matomo_api_update_user
      changed_when: ( matomo_api_update_user.json.result is defined ) and ( matomo_api_update_user.json.result == "success" )
      failed_when: ( matomo_api_update_user.json.result is not defined ) or ( matomo_api_update_user.result is defined and matomo_api_update_user.json.result == "error" )

    - name: Debug matomo_api_update_user
      ansible.builtin.debug:
        var: matomo_api_update_user
        verbosity: 2

    - name: "Ensure that the {{ matomo_accounts_file }} exists"
      ansible.builtin.blockinfile:
        path: "{{ matomo_accounts_file }}"
        create: true
        block: |
          ---
        insertbefore: BOF
        marker: "# Ansible managed Matomo accounts {mark}"
        mode: "0600"
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"

    - name: "Update the Matomo password for {{ matomo_login_existing }} in {{ matomo_accounts_file }}"
      ansible.builtin.blockinfile:
        path: "{{ matomo_accounts_file }}"
        block: |
          - login: {{ matomo_login_existing | quote }}
            email: {{ matomo_login_email | quote }}
            password: {{ matomo_login_password | quote }}
        marker: "# {{ matomo_login }} <{{ matomo_login_email }}> {mark}"
        mode: "0600"
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
      when:
        - ( matomo_accounts_file is defined ) and ( matomo_accounts_file | length > 0 )
        - ( matomo_accounts_file_path is defined ) and ( matomo_accounts_file_path.stat.exists )

    - name: "Matomo password update notification email sent to {{ matomo_login_email }}"
      community.general.mail:
        from: "{{ matomo_email_from | default('Webarchitects') | quote }} <root@{{ inventory_hostname }}>"
        to: "{{ matomo_login_email }}"
        subject: "[{{ matomo_email_subject_tag | default('webarchitects') }}] Matomo password updated for {{ matomo_login_existing }} on {{ matomo_url }}"
        headers: "{{ matomo_notify_headers }}"
        # https://github.com/ansible/ansible/issues/58543
        charset: us-ascii
        body: "{{ lookup('template', 'notify_matomo_update_passwd.j2') }}"
        host: localhost
        port: 25
        secure: never

  tags:
    - matomo
...
