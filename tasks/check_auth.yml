# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Matomo Ansible role.
#
# The Webarchitects Matomo Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Matomo Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Matomo Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check that the matomo_token_auth and matomo_admin_password are correct
  block:

    - name: Check variables are defined
      ansible.builtin.assert:
        that:
          - matomo_url is defined
          - matomo_user is defined
          - matomo_password is defined
          - matomo_token_auth is defined
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Unblock all currently blocked IPs
      ansible.builtin.command: "{{ matomo_php }} console --no-ansi -n login:unblock-blocked-ips"
      args:
        chdir: "{{ matomo_html }}"
      check_mode: false
      become: true
      become_user: "{{ matomo_user }}"
      changed_when: false
      register: matomo_unblock_blocked_ips
      failed_when: ( matomo_unblock_blocked_ips.rc != 0 ) or ( matomo_unblock_blocked_ips.stdout != "Done" )

    # NOTE The following POST is to check that both the password and the
    #      token auth are correct
    #      See https://developer.matomo.org/api-reference/reporting-api#UsersManager
    - name: "Check superuser access for {{ matomo_user }} on {{ matomo_url }}"
      ansible.builtin.uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.setSuperUserAccess
          userLogin: "{{ matomo_user }}"
          hasSuperUserAccess: true
          passwordConfirmation: "{{ matomo_password }}"
        status_code: 200
      become: true
      become_user: "{{ matomo_user }}"
      check_mode: false
      delegate_to: "{{ inventory_hostname }}"
      changed_when: false
      register: matomo_api_set_super_user_access

    - name: Debug matomo_api_set_super_user_access
      ansible.builtin.debug:
        var: matomo_api_set_super_user_access
        verbosity: 2

    - name: Set matomo_super_user_access to false
      ansible.builtin.set_fact:
        matomo_super_user_access: false
      when: (matomo_api_set_super_user_access.json.result is not defined) or (matomo_api_set_super_user_access.json.result != "success")

    - name: Set matomo_super_user_access to true
      ansible.builtin.set_fact:
        matomo_super_user_access: true
      when:
        - matomo_api_set_super_user_access.json.result is defined
        - matomo_api_set_super_user_access.json.result == "success"

    - name: Matomo super user auth token and / or password variables check
      ansible.builtin.fail:
        msg: "Please check the matomo_token_auth and matomo_password are correct for the Matomo superuser {{ matomo_user }} on {{ matomo_url }}"
      when: not matomo_super_user_access | bool

  tags:
    - matomo
...
