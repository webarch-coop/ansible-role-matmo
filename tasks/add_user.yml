# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Matomo Ansible role.
#
# The Webarchitects Matomo Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Matomo Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Matomo Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Add new Matomo account
  block:

    - name: Check variables
      ansible.builtin.assert:
        that:
          - ( matomo_url is defined )
          - ( matomo_password is defined )
          - ( matomo_token_auth is defined )
          - ( matomo_login is defined ) and ( matomo_login is regex("^[a-zA-Z0-9-]{2,14}$") )
          - ( matomo_login_email is defined ) and ( matomo_login_email is regex("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$") )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Generate a random string for Matomo password
      ansible.builtin.command: "pwgen -n {{ 24 | random(14) }} 1"
      changed_when: false
      register: matomo_login_password_gen
      no_log: true

    - name: Set a variable with the random password
      ansible.builtin.set_fact:
        matomo_login_password: "{{ matomo_login_password_gen.stdout }}"
      no_log: true

    - name: Add Matomo user account using the API
      ansible.builtin.uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.addUser
          userLogin: "{{ matomo_login }}"
          password: "{{ matomo_login_password }}"
          email: "{{ matomo_login_email }}"
        status_code: 200
        use_netrc: false
      become: true
      become_user: "{{ matomo_user }}"
      check_mode: false
      delegate_to: "{{ inventory_hostname }}"
      register: matomo_api_add_user
      failed_when: ( matomo_api_add_user.json is not defined ) or ( matomo_api_add_user.json.result != "success" )
      changed_when: ( matomo_api_add_user.json is defined ) or ( matomo_api_add_user.json.result == "success" )

    - name: Debug matomo_api_add_user
      ansible.builtin.debug:
        var: matomo_api_add_user
        verbosity: 2

    - name: Save the password to the matomo_accounts_file path if it is defined and this isn't the first user
      block:

        - name: "Ensure that the {{ matomo_accounts_file }} exists"
          ansible.builtin.blockinfile:
            path: "{{ matomo_accounts_file }}"
            create: true
            block: |
              ---
            insertbefore: BOF
            marker: "# Ansible managed Matomo accounts {mark}"
            mode: "0600"
            owner: "{{ matomo_user }}"
            group: "{{ matomo_group }}"

        - name: "Password for {{ matomo_login_email }} present in {{ matomo_accounts_file }}"
          ansible.builtin.blockinfile:
            path: "{{ matomo_accounts_file }}"
            block: |
              - login: {{ matomo_login | quote }}
                email: {{ matomo_login_email | quote }}
                password: {{ matomo_login_password | quote }}
            marker: "# {{ matomo_login }} <{{ matomo_login_email }}> {mark}"
            mode: "0600"
            owner: "{{ matomo_user }}"
            group: "{{ matomo_group }}"

      when:
        - ( matomo_login != matomo_first_user )
        - ( matomo_login_email != matomo_first_user_email )
        - ( matomo_accounts_file is defined ) and ( matomo_accounts_file | length > 0 )

    - name: Matomo password notification
      block:

        - name: "Password notification email sent to {{ matomo_login_email }}"
          community.general.mail:
            from: "{{ matomo_email_from | default('Webarchitects') | quote }} <root@{{ ansible_facts.fqdn }}>"
            to: "{{ matomo_login_email }}"
            subject: "[{{ matomo_email_subject_tag | default('webarchitects') }}] Matomo {{ matomo_login }} account details for {{ matomo_url }}"
            headers: "{{ matomo_notify_headers }}"
            # https://github.com/ansible/ansible/issues/58543
            charset: us-ascii
            body: "{{ lookup('template', 'notify_matomo_passwd.j2') }}"
            host: localhost
            port: 25
            secure: never

        - name: "Notification date recorded in {{ matomo_login_home }}/.notify_matomo_passwd file"
          ansible.builtin.lineinfile:
            path: "{{ matomo_login_home }}/.notify_matomo_passwd"
            line: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }} : {{ matomo_login }} <{{ matomo_login_email }}>"
            create: true
            state: present
            insertafter: EOF
            owner: root
            group: "{{ matomo_login }}"
            mode: "0640"
          when: ( matomo_login_home is defined ) and ( matomo_login_home | length > 0 )

      when: matomo_api_add_user.json.result == "success"

    - name: "Set the matomo_login_existing variables to {{ matomo_login }}"
      ansible.builtin.set_fact:
        matomo_login_existing: "{{ matomo_login }}"

  tags:
    - matomo
...
