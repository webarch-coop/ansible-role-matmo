---
- name: Install Matomo
  block:

    - name: Required Matomo GPG signature downloaded
      get_url:
        url: "https://builds.matomo.org/matomo-{{ matomo_required }}.tar.gz.asc"
        dest: "{{ matomo_private }}/matomo-{{ matomo_required }}.tar.gz.asc"
        force: true
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
        mode: 0640

    - name: Required Matomo downloaded
      get_url:
        url: "https://builds.matomo.org/matomo-{{ matomo_required }}.tar.gz"
        dest: "{{ matomo_private }}/matomo-{{ matomo_required }}.tar.gz"
        force: true
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
        mode: 0640

    - name: Matomo GPG signature checked
      command: >
        gpg --no-tty --verify --logger-fd 1
        "{{ matomo_private }}/matomo-{{ matomo_required }}.tar.gz.asc"
        "{{ matomo_private }}/matomo-{{ matomo_required }}.tar.gz"
      register: matomo_signature_check
      become: true
      become_user: "{{ matomo_user }}"

    - name: Debug GPG signature check
      debug:
        var: matomo_signature_check.stdout_lines
        verbosity: 2

    - name: Private directory for Matomo to be unarchived into absent
      file:
        path: "{{ matomo_private }}/matomo"
        state: absent

    - name: Required Matomo unarchived into private directory
      unarchive:
        remote_src: true
        src: "{{ matomo_private }}/matomo-{{ matomo_required }}.tar.gz"
        dest: "{{ matomo_private }}"
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"

    - name: Matomo files rsynced into place
      shell: "rsync -aq {{ matomo_private }}/matomo/ {{ matomo_html }}/"
      args:
        executable: /bin/bash
      become: true
      become_user: "{{ matomo_user }}"

    - block:

        - name: "Check for {{ matomo_home }}/.my.cnf"
          stat:
            path: "{{ matomo_home }}/.my.cnf"
          register: matomo_mycnf_check

        - name: "MariaDB password read from {{ matomo_home }}/.my.cnf"
          command: "my_print_defaults --defaults-file='.my.cnf' client"
          args:
            chdir: "{{ matomo_home }}"
          register: matomo_my_print_defaults
          changed_when: false
          when: ( matomo_mycnf_check is defined ) and ( matomo_mycnf_check.stat.exists )
          no_log: true

        - name: Set a fact for the MariaDB password
          set_fact:
            matomo_db_pass: "{{ line | regex_replace('^--password=') | trim }}"
          when: line is regex('^--password=')
          loop: "{{ my_print_defaults.stdout_lines }}"
          loop_control:
            loop_var: line
          no_log: true

      when: ( matomo_db_pass is not defined ) or ( matomo_db_pass | length == 0 )

    - name: Generate a password if matomo_first_user_pass is not defined
      block:

        - name: Random passwd for Matomo admin generated
          command: pwgen -n 20 1
          no_log: true
          register: matomo_first_user_pass_gen

        - name: Fact set for Matomo admin password
          set_fact:
            matomo_first_user_pass: "{{ matomo_first_user_pass_gen.stdout | trim | quote }}"
          when: ( matomo_first_user_pass_gen is defined ) and ( matomo_first_user_pass_gen | length > 0 )
          no_log: true

      when: ( matomo_first_user_pass is not defined ) or ( matomo_first_user_pass | length == 0 )

    - name: Include web install tasks
      include_tasks: install_web.yml

    - name: Matomo admin password notification
      block:

        - name: "Password notification email sent to {{ matomo_first_user_email }}"
          mail:
            from: "{{ matomo_notify_from }}"
            to: '"{{ matomo_first_user | quote }}" <{{ matomo_first_user_email }}>'
            subject: "[{{ matomo_notify_subject_tag | default('webarchitects') }}] Matomo superuser password for {{ matomo_first_user }} on {{ vhost.value.users_apache_server_name }}"
            # https://github.com/ansible/ansible/issues/58543
            charset: us-ascii
            body: "{{ lookup('template', 'notify_matomo_install_passwd.j2') }}"
            host: localhost
            port: 25
            secure: never

        - name: "Notification date recorded in {{ matomo_home }}/.notify_matomo_passwd file"
          lineinfile:
            path: "{{ matomo_home }}/.notify_matomo_passwd"
            line: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }} : {{ matomo_first_user | quote  }} <{{ matomo_first_user_email }}>"
            create: true
            state: present
            insertafter: EOF
            owner: root
            group: "{{ matomo_user }}"
            mode: 0640

      when: ( matomo_notify_passwd is defined ) and ( matomo_notify_passwd )

    - name: Get the installed Matomo version number
      command: "php console core:update --no-ansi -n --version"
      args:
        chdir: "{{ matomo_html }}"
      changed_when: false
      check_mode: false
      become: true
      become_user: "{{ matomo_user }}"
      register: matomo_installed_check

    - name: Set a variable for the installed Matomo version number
      set_fact:
        matomo_installed: "{{ matomo_installed_check.stdout.split(' ')[2] }}"

    - name: Print the installed version of Matomo
      debug:
        msg: "The installed version of Matomo is {{ matomo_installed }}"
        verbosity: 1

  tags:
    - matomo
...
