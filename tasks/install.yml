---
- name: Matomo download tasks included
  include_tasks: download.yml
  tags:
    - matomo

- name: Matomo files rsynced into place
  shell: "rsync -aq {{ matomo_private }}/matomo/ {{ matomo_html }}/"
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ matomo_user }}"
  tags:
    - matomo

- name: Matomo extratools tasks included
  include_tasks: extratools.yml
  tags:
    - matomo

- name: Matomo userconsole tasks included
  include_tasks: userconsole.yml
  tags:
    - matomo

- block:

    - name: "Check for {{ matomo_home }}/.my.cnf"
      stat:
        path: "{{ matomo_home }}/.my.cnf"
      register: matomo_mycnf_check
      tags:
        - matomo

    - name: "MariaDB password read from {{ matomo_home }}/.my.cnf"
      shell: "my_print_defaults --defaults-file='.my.cnf' client | grep '^--password' | sed -e 's/--password=//'"
      args:
        executable: /bin/bash
        chdir: "{{ matomo_html }}/"
      register: matomo_db_pass_read
      become: true
      become_user: "{{ matomo_user }}"
      changed_when: false
      tags:
        - matomo

    - name: Set a fact for the MariaDB password
      set_fact:
        matomo_db_pass: "{{ matomo_db_pass_read.stdout }}"
      tags:
        - matomo

  when: ( matomo_db_pass is not defined ) or ( matomo_db_pass == "" )

- name: "Check for existance of {{ item.value.users_home | default('/home/' + item.key) }}/.notify_matomo_passwd file"
  stat:
    path: "{{ item.value.users_home | default('/home/' + item.key) }}/.notify_matomo_passwd"
  register: matomo_passwd_notify_check
  tags:
    - matomo

- name: Generate admin passwd and install Matomo
  block:

    - name: Random passwd for Matomo admin generated
      command: pwgen -n 20 1
      register: matomo_first_user_pass_gen
      when: ( matomo_first_user_pass is not defined ) or ( matomo_first_user_pass == "" )
      tags:
        - matomo

    - name: Fact set for Matomo admin password
      set_fact:
        matomo_first_user_pass: "{{ matomo_first_user_pass_gen.stdout | trim | quote }}"
      when: ( matomo_first_user_pass_gen is defined ) and ( matomo_first_user_pass_gen != "" )
      tags:
        - matomo

    - name: Print the Matomo install command that is to be run
      debug:
        msg: "php console --no-ansi -n matomo:install --db-username={{ matomo_db_username | quote}} --db-pass={{ matomo_db_pass | quote }} --db-host={{ matomo_db_host | quote}} --db-name={{ matomo_db_name | quote }} --first-site-name={{ matomo_first_site_name | quote }} --first-site-url={{ matomo_first_site_url | quote }} --first-user={{ matomo_first_user | quote }} --first-user-email={{ matomo_first_user_email | quote }} --first-user-pass={{ matomo_first_user_pass | quote }} --force"
        verbosity: 1
      tags:
        - matomo

    - name: Matomo installed
      shell: "php console --no-ansi -n matomo:install --db-username={{ matomo_db_username | quote }} --db-pass={{ matomo_db_pass | quote }} --db-host={{ matomo_db_host | quote }} --db-name={{ matomo_db_name | quote }} --first-site-name={{ matomo_first_site_name | quote }} --first-site-url={{ matomo_first_site_url | quote }} --first-user={{ matomo_first_user | quote }} --first-user-email={{ matomo_first_user_email | quote }} --first-user-pass={{ matomo_first_user_pass | quote }} --force"
      # ' vim syntax highlighting buxfix
      args:
        executable: /bin/bash
        chdir: "{{ matomo_html }}/"
      become: true
      become_user: "{{ matomo_user }}"
      tags:
        - matomo

    # https://github.com/digitalist-se/extratools/issues/11
    - name: Check if the main_url for siteid 1 is set to http://example.com
      command: "mysql {{ matomo_db_name }} --skip-column-names --batch -e 'SELECT main_url FROM site WHERE siteid=1'"
      args:
        chdir: "{{ matomo_html }}/"
      changed_when: false
      check_mode: false
      register: matomo_first_site_url_check
      become: true
      become_user: "{{ matomo_user }}"
      tags:
        - matomo
        - users-update

    - name: Update main_url for siteid 1 due to bug
      command: "mysql {{ matomo_db_name }} --skip-column-names --batch -e 'UPDATE site SET main_url={{ matomo_first_site_url | quote }} WHERE siteid=1'"
      args:
        chdir: "{{ matomo_html }}/"
      when: matomo_first_site_url_check.stdout == "http://example.com"
      become: true
      become_user: "{{ matomo_user }}"
      tags:
        - matomo
        - users-update

    - name: "Password notification email sent to {{ matomo_first_user_email }}"
      mail:
        from: "{{ matomo_notify_from | default('Webarchitects') }} <root@{{ ansible_fqdn }}>"
        to: "{{ matomo_first_user | quote}} <{{ matomo_first_user_email }}>"
        subject: "[{{ matomo_notify_subject_tag | default('webarchitects') }}] Matomo admin password for {{ matomo_first_user }} on {{ vhost.value.users_apache_server_name }}"
        body: "{{ lookup('template', 'templates/notify_matomo_passwd.j2') }}"
        host: localhost
        port: 25
        secure: never
      tags:
        - matomo

    - name: "Notification date recorded in {{ item.value.users_home | default('/home/' + item.key) }}/.notify_matomo_passwd file"
      lineinfile:
        path: "{{ item.value.users_home | default('/home/' + item.key) }}/.notify_matomo_passwd"
        line: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S')}} : {{ item.value.users_name | default(item.key) }} <{{ item.value.users_email }}>"
        create: true
        state: present
        insertafter: EOF
        owner: root
        group: root
        mode: 0640
      tags:
        - matomo

  when: matomo_passwd_notify_check.stat.exists == False
