# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects Matomo Ansible role.
#
# The Webarchitects Matomo Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Matomo Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Matomo Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check variables
  block:

    - name: Check that the matomo_users variable is defined
      ansible.builtin.assert:
        that:
          - ( matomo_user is defined ) and ( matomo_user is regex("^[a-z0-9]*$") )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: "Populate the getent_passwd array for {{ inventory_hostname }}"
      ansible.builtin.getent:
        database: passwd
        split: ':'

    - name: "Fail if the {{ matomo_user }} user account doesn't exist"
      ansible.builtin.fail:
        msg: "The {{ matomo_user }} user account doesn't exist on {{ inventory_hostname }}"
      when: matomo_user not in getent_passwd

    - name: "Check that the required directory variables are defined for {{ matomo_user }}"
      ansible.builtin.assert:
        that:
          - matomo_home is defined
          - matomo_html is defined
          - matomo_private is defined
          - matomo_logs is defined
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: "Stat directories for {{ matomo_user }}"
      ansible.builtin.stat:
        path: "{{ path }}"
      loop:
        - "{{ matomo_home }}"
        - "{{ matomo_html }}"
        - "{{ matomo_private }}"
        - "{{ matomo_logs }}"
      register: matomo_dirs
      loop_control:
        loop_var: path
        label: "{{ path }}"

    - name: "Print the results of the directory checks for {{ matomo_user }}"
      ansible.builtin.debug:
        msg: "Stat results: {{ stat }}"
        verbosity: 1
      loop: "{{ matomo_dirs.results }}"
      loop_control:
        loop_var: stat
        label: "{{ stat.path }}"

    - name: "Fail if any of the directories for {{ matomo_user }} don't exist"
      ansible.builtin.fail:
        msg: "The directory {{ dir.stat.path }} needs to exist"
      when: not dir.stat.isdir
      loop: "{{ matomo_dirs.results }}"
      loop_control:
        loop_var: dir
        label: "{{ dir.path }}"

    # Additional check on the values of these variables could be added below
    - name: "Check that required variables are defined for {{ matomo_user }}"
      ansible.builtin.assert:
        that:
          - matomo_autoupdate is defined
          - matomo_db_host is defined
          - matomo_db_username is defined
          - matomo_dbname is defined
          - matomo_first_site_name is defined
          - matomo_first_site_url is defined
          - matomo_first_user is defined
          - matomo_first_user_email is defined
          - matomo_notify_from is defined
          - matomo_notify_headers is defined
          - matomo_notify_passwd is defined
          - matomo_notify_reply_to is defined
          - matomo_notify_signature is defined
          - matomo_notify_subject_tag is defined
          - matomo_php_bin is defined
          - matomo_php_version is defined
          - matomo_url is defined
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check the versions of PHP available
      ansible.builtin.command: /usr/sbin/phpquery -V
      check_mode: false
      changed_when: false
      register: matomo_php_query

    - name: Set a fact for the PHP versions
      ansible.builtin.set_fact:
        matomo_php_versions: "{{ matomo_php_query.stdout_lines }}"

    - name: The PHP version specified must be available
      ansible.builtin.assert:
        that:
          - matomo_php_version in matomo_php_versions
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: PHP ini path check
      ansible.builtin.stat:
        path: "{{ matomo_php_ini }}"
      register: matomo_php_ini_path
      when:
        - matomo_php_ini is defined
        - matomo_php_ini | length > 0

    - name: PHP bin path check
      ansible.builtin.stat:
        path: "{{ matomo_php_bin }}"
      register: matomo_php_bin_path

    - name: The PHP bin path must exist
      ansible.builtin.assert:
        that:
          - matomo_php_bin_path.stat.exists | bool
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Set a fact for the PHP CLI
      ansible.builtin.set_fact:
        matomo_php: "{{ matomo_php_bin }}{% if matomo_php_ini is defined and matomo_php_ini_path.stat.exists | bool %} --php-ini {{ matomo_php_ini }}{% endif %}"

    - name: Check for config.ini.php
      ansible.builtin.stat:
        path: "{{ matomo_html }}/config/config.ini.php"
      register: matomo_config_check

    - name: "Check Matomo version"
      block:

        - name: Include Matomo version check
          ansible.builtin.include_tasks: check_version.yml

        - name: Check that matomo_token_auth and matomo_password are correct if defined
          ansible.builtin.include_tasks: check_auth.yml
          when:
            - ( matomo_installed is defined ) and ( matomo_installed is version('3.14.1', '>=') )
            - ( matomo_password is defined ) and ( matomo_password | length > 0 )
            - ( matomo_token_auth is defined ) and ( matomo_token_auth | length > 0 )

      when: ( matomo_config_check is defined ) and ( matomo_config_check.stat.exists )

    # Set matomo_latest to the latest available version of Matomo
    - name: Include latest version check
      ansible.builtin.include_tasks: check_latest_version.yml

    - name: Set the matomo_required variable
      ansible.builtin.set_fact:
        matomo_required: "{% if matomo_autoupdate %}{{ matomo_latest }}{% else %}{{ matomo_version }}{% endif %}"

  tags:
    - matomo
...
