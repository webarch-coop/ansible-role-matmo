---
- name: Matomo geolocation tasks
  block:

    - name: Check if a current DBIP City Lite database exists
      ansible.builtin.stat:
        path: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb"
      register: matomo_dbip_mmdb

    - name: Debug the check if a current DBIP City Lite database exists
      ansible.builtin.debug:
        var: matomo_dbip_mmdb.stat.exists
        verbosity: 2
      when: matomo_dbip_mmdb is defined

    - name: Download and unarchive the DBIP City Lite database
      block:

        - name: Current DBIP City Lite database archive present
          ansible.builtin.get_url:
            url: "https://download.db-ip.com/free/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz"
            dest: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz"
            timeout: 120
            owner: "{{ matomo_user }}"
            group: "{{ matomo_group }}"
            mode: 0640

        - name: DBIP City Lite database unarchived
          block:

            - name: DBIP City Lite database unarchived
              ansible.builtin.command: "gunzip dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz"
              args:
                chdir: "{{ matomo_private }}"
                creates: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb"
              become: true
              become_user: "{{ matomo_user }}"

          rescue:

            - name: Delete the downloaded DBIP City Lite database archive if there was an error unarchiving it
              ansible.builtin.file:
                path: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz"
                state: absent

            - name: Delete the downloaded DBIP City Lite database if there was an error unarchiving it
              ansible.builtin.file:
                path: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb"
                state: absent

      when: ( not matomo_dbip_mmdb.stat.exists )

    - name: Check if a current DBIP City Lite database exists
      ansible.builtin.stat:
        path: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb"
      register: matomo_dbip_mmdb

    - name: Debug the check if a current DBIP City Lite database exists
      ansible.builtin.debug:
        var: matomo_dbip_mmdb.stat.exists
        verbosity: 2
      when: matomo_dbip_mmdb is defined

    - name: Error updating the DBIP City Lite database
      ansible.builtin.fail:
        msg:
          - "There has been an error downloading, unarchiving and copying the DBIP City Lite database for Matomo."
          - "If the downloaded file was corrupted and couldn't be unarchived then simply running this again might fix the issue."
          - "For further debugging:"
          - "Check if https://download.db-ip.com/free/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz exists"
          - "Check if {{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb.gz exists"
          - "Check if {{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb exists"
      when: not matomo_dbip_mmdb.stat.exists

    - name: DBIP City Lite database in place
      ansible.builtin.copy:
        src: "{{ matomo_private }}/dbip-city-lite-{{ lookup('pipe','date +%Y-%m') }}.mmdb"
        dest: "{{ matomo_html }}/misc/DBIP-City.mmdb"
        remote_src: true
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
        mode: 0644
      when: matomo_dbip_mmdb.stat.exists

  tags:
    - matomo
...
