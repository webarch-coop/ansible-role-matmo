---
- name: Check Matomo site for duplicates
  block:

    - name: Set an empty duplicate variable
      set_fact:
        matomo_site_duplicates: []

    - name: Matomo API POST request to SitesManager.getSiteUrlsFromId
      uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: SitesManager.getSiteUrlsFromId
          idSite: "{{ site.idsite }}"
          status_code: 200
          return_content: true
      register: matomo_get_site_urls_from_id
      failed_when: ( matomo_get_site_urls_from_id.failed is defined ) and ( matomo_get_site_urls_from_id.failed )

    - name: Debug matomo_get_site_urls_from_id.json
      debug:
        var: matomo_get_site_urls_from_id.json
        verbosity: 2

    - name: Loop though all the URLs checking for URL duplicates
      include_tasks: check_duplicate_urls.yml
      loop: "{{ matomo_get_site_urls_from_id.json }}"
      loop_control:
        loop_var: matomo_site_url

    - name: Get details of duplicated sites
      block:

        - name: Get the details for the site being checked
          uri:
            url: "{{ matomo_url }}"
            method: POST
            body_format: form-urlencoded
            body:
              module: API
              format: JSON
              token_auth: "{{ matomo_token_auth }}"
              method: SitesManager.getSiteFromId
              idSite: "{{ site.idsite }}"
          register: matomo_site_checked
          failed_when: ( matomo_site_checked.failed is defined ) and ( matomo_site_checked.failed )

        - name: Debug matomo_site_checked
          debug:
            var: matomo_site_checked.json
            verbosity: 2

        - name: Get the details of the sites with duplicate URLs
          uri:
            url: "{{ matomo_url }}"
            method: POST
            body_format: form-urlencoded
            body:
              module: API
              format: JSON
              token_auth: "{{ matomo_token_auth }}"
              method: SitesManager.getSiteFromId
              idSite: "{{ matomo_siteid_dupe }}"
          register: matomo_site_checked
          loop: "{{ matomo_site_duplicates | unique }}"
          loop_control:
            loop_var: matomo_siteid_dupe

        - name: Debug matomo_site_checked.results
          debug:
            var: matomo_site_checked.results
            verbosity: 2

        - name: Print the sites IDs with duplicate URLs
          fail:
            msg:
              - "The site with the following id, name and main url"
              - "{{ matomo_site_checked.json.idsite }} {{ matomo_site_checked.json.name }} {{ matomo_site_checked.json.mainurl }}"
              - "Shares URLs with these sites"
              - "{{ matomo_site_checked_result.json }}"
          loop: "{{ matomo_site_checked.results }}"
          loop_control:
            loop_var: matomo_site_checked_result

      when: matomo_site_duplicates != []

  tags:
    - matomo
...
