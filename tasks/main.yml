---
- name: Include variables checks
  include_tasks: check_variables.yml
  tags:
    - matomo

- name: Only install or upgrade Matomo if the user account exists
  block:

    - name: Required directories present
      file:
        path: "{{ matomo_home }}/{{ dir }}"
        state: directory
        owner: "{{ matomo_user }}"
        group: "{{ matomo_user }}"
        mode: 0700
      loop:
        - .ansible
        - .gnupg
      loop_control:
        loop_var: dir

    # https://builds.piwik.org/signature.asc
    - name: The Matomo GPG public key is present
      copy:
        src: files/matomo.pub
        dest: "{{ matomo_private }}/matomo.pub"
      become: true
      become_user: "{{ matomo_user }}"

    - name: The Matomo GPG public key is imported
      command: "gpg --no-tty --import {{ matomo_private }}/matomo.pub"
      register: matomo_gpg_key_import
      changed_when: "'not changed' not in matomo_gpg_key_import.stderr"
      become: true
      become_user: "{{ matomo_user }}"

    # https://github.com/web-flow.gpg
    - name: The GitHub GPG public key is present
      copy:
        src: files/github.pub
        dest: "{{ matomo_private }}/github.pub"
      become: true
      become_user: "{{ matomo_user }}"

    - name: The GitHub GPG public key is imported
      command: "gpg --no-tty --import {{ matomo_private }}/github.pub"
      register: matomo_gh_gpg_key_import
      changed_when: "'not changed' not in matomo_gh_gpg_key_import.stderr"
      become: true
      become_user: "{{ matomo_user }}"

    # Set matomo_latest to the latest available version of Matomo
    - name: Include latest version check
      include_tasks: check_latest_version.yml

    - name: Set the matomo_required variable
      set_fact:
        matomo_required: "{% if matomo_update_strategy == 'latest' %}{{ matomo_latest }}{% else %}{{ matomo_version }}{% endif %}"

    - name: Check for config.ini.php
      stat:
        path: "{{ matomo_html }}/config/config.ini.php"
      register: matomo_config_check

    - name: Check the Matomo version and then conditionally upgrade
      block:

        # Set matomo_installed to the installed version of Matomo
        - name: Include version check
          include_tasks: check_version.yml

        - name: Fail if a downgrade has been specified
          fail:
            msg: "Downgrading from Matomo version {{ matomo_installed }} to Matomo {{ matomo_required }} is not supported"
          when:
            - matomo_update_strategy == "version"
            - matomo_installed is version(matomo_required, '>')

        - name: Include upgrade tasks
          include_tasks: upgrade.yml
          when:
            - matomo_installed is version(matomo_required, '<')

      when: ( matomo_config_check is defined ) and ( matomo_config_check.stat.exists == True )
      tags:
        - matomo

    - name: Include install tasks
      include_tasks: install.yml
      when: ( matomo_config_check is defined ) and ( matomo_config_check.stat.exists == False )

    - name: Include cron tasks
      include_tasks: cron.yml
      when: ( matomo_cron is defined ) and ( matomo_cron == True )

    - name: Include settings tasks
      include_tasks: settings.yml

  when: '"no such user" not in matomo_user_check.stderr'
  tags:
    - matomo
...
