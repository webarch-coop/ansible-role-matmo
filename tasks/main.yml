---
- name: "Check if the Matomo {{ matomo_user }} user account exists"
  shell: "id {{ matomo_user }} && echo true || echo false"
  check_mode: false
  register: matomo_user_check
  changed_when: '"no such user" in matomo_user_check.stderr'
  tags:
    - matomo

- name: Only install or upgrade Matomo if the user account exists
  block:

    - name: Required directories present
      file:
        path: "{{ matomo_home }}/{{ dir }}"
        state: directory
        owner: "{{ matomo_user }}"
        group: "{{ matomo_user }}"
        mode: 0700
      loop:
        - .ansible
        - .gnupg
      loop_control:
        loop_var: dir
      tags:
        - matomo

    # https://builds.piwik.org/signature.asc
    - name: The Matomo GPG public key is present
      copy:
        src: files/matomo.pub
        dest: "{{ matomo_private }}/matomo.pub"
      become: true
      become_user: "{{ matomo_user }}"
      tags:
        - matomo

    - name: The Matomo GPG public key is imported
      command: "gpg --no-tty --import {{ matomo_private }}/matomo.pub"
      register: matomo_gpg_key_import
      changed_when: "'not changed' not in matomo_gpg_key_import.stderr"
      become: true
      become_user: "{{ matomo_user }}"
      tags:
        - matomo

    - name: Include latest version check
      include_tasks: check_latest_version.yml
      tags:
        - matomo

    - name: Check for config.ini.php
      stat:
        path: "{{ matomo_html }}/config/config.ini.php"
      register: matomo_config_check
      tags:
        - matomo

    - name: Check the Matomo version and then conditionally upgrade
      block:

        - name: Include version check
          include_tasks: check_version.yml
          tags:
            - matomo

        - name: Include upgrade tasks
          include_tasks: upgrade.yml
          when: matomo_installed != matomo_latest
          tags:
            - matomo

        - name: Include version check
          include_tasks: check_version.yml
          tags:
            - matomo

      when: ( matomo_config_check is defined ) and ( matomo_config_check.stat.exists == True )

    - name: Include install tasks
      include_tasks: install.yml
      when: ( matomo_config_check is defined ) and ( matomo_config_check.stat.exists == False )
      tags:
        - matomo

    - name: Include Extra Tools tasks
      include_tasks: extratools.yml
      when: ( matomo_extratools is defined ) and ( matomo_extratools == "force" )
      tags:
        - matomo

    - name: Include User Console tasks
      include_tasks: userconsole.yml
      when: ( matomo_userconsole is defined ) and ( matomo_userconsole == "force" )
      tags:
        - matomo

  when: '"no such user" not in matomo_user_check.stderr'
...
