---
- name: Check password in matomo_accounts_file for matomo_login_existing and update it if it is incorrect
  block:

    - name: Check variables
      assert:
        that:
          - ( matomo_url is defined )
          - ( matomo_token_auth is defined )
          - ( matomo_accounts_file is defined )
          - ( matomo_login_existing is defined )
          - ( matomo_login_existing | length > 0 )
        msg: "Please ensure that all the required variables are defined"

    - name: "Stat {{ matomo_accounts_file }}"
      stat:
        path: "{{ matomo_accounts_file }}"
      register: matomo_accounts_file_path

    - name: Check the length of the accounts file
      block:

        - name: "Get the length of {{ matomo_accounts_file }}"
          command: "wc -l {{ matomo_accounts_file }}"
          check_mode: false
          changed_when: false
          register: matomo_accounts_file_wc

        - name: "Set a fact for the length of {{ matomo_accounts_file }}"
          set_fact:
            matomo_accounts_file_lines: "{{ matomo_accounts_file_wc.stdout.split(' ')[0] | int }}"

      when:
        - ( matomo_accounts_file_path.stat is defined )
        - ( matomo_accounts_file_path.stat.exists )

    - name: Check the password in the matomo_accounts_file
      block:

        - name: Set the matomo_account_login_password and matomo_logme to empty variables
          set_fact:
            matomo_account_login_password: ""
            matomo_logme: ""

        - name: "Slurp account information from {{ matomo_accounts_file }}"
          slurp:
            src: "{{ matomo_accounts_file }}"
          register: matomo_accounts_file_b64encoded

        - name: Check the contents of the matomo_accounts_file when it contains a list
          block:

            - name: "Set a fact for the account details in {{ matomo_accounts_file }}"
              set_fact:
                matomo_accounts: "{{ matomo_accounts_file_b64encoded.content | b64decode | from_yaml | list }}"

            - name: Debug matomo_accounts
              debug:
                var: matomo_accounts
                verbosity: 2

            - name: Set a fact for the matomo_login_password
              set_fact:
                matomo_account_login_password: "{{ matomo_account.password }}"
              when: matomo_account.login == matomo_login_existing
              loop: "{{ matomo_accounts }}"
              loop_control:
                loop_var: matomo_account

            - name: When a existing password has been found
              block:

                # https://matomo.org/faq/how-to/faq_30/
                - name: "GET a login cookie to check that the matomo_account_login_password is correct for {{ matomo_login_existing }}"
                  uri:
                    url: "{{ matomo_url }}"
                    method: POST
                    body_format: form-urlencoded
                    body:
                      module: Login
                      action: logme
                      login: "{{ matomo_login_existing }}"
                      password: "{{ matomo_account_login_password | hash('md5') }}"
                    status_code:
                      - 200
                      - 302
                      - 500
                    return_content: true
                  register: matomo_logme

                - name: Debug matomo_logme
                  debug:
                    var: matomo_logme
                    verbosity: 2

                - name: "Fail if there is an error when logging in as {{ matomo_login_existing }} at {{ matomo_url }}"
                  fail:
                    msg: >
                      There was a Matomo login failure at {{ matomo_url }} using the username {{ matomo_login_existing }}
                      and the password {{ matomo_account_login_password }} which were read from {{ matomo_accounts_file }}
                      via the following URL
                      {{ matomo_url }}?module=Login&action=logme&login={{ matomo_login_existing }}&password={{ matomo_account_login_password | hash('md5') }}
                  when: ( matomo_logme.status == 500 ) or ( "Wrong Username and password combination" in matomo_logme.content )

                - name: Set a fact for the matomo_login_password
                  set_fact:
                    matomo_login_password: "{{ matomo_account_login_password }}"
                  when: matomo_logme.status == 302

              when: matomo_account_login_password | length > 0

          when: matomo_accounts_file_b64encoded.content | b64decode | from_yaml | type_debug == "list"

      when:
        - ( matomo_accounts_file is defined ) and ( matomo_accounts_file | length > 0 )
        - ( matomo_accounts_file_path is defined ) and ( matomo_accounts_file_path.stat.exists )
        - ( matomo_accounts_file_lines is defined ) and ( matomo_accounts_file_lines | int > 3 )

    - name: Include update password tasks when matomo_accounts_file doesn't exist or os only 3 lines or the login cookie request doesn't redirect of the existing password was not found
      include_tasks: update_password.yml
      when: ( matomo_accounts_file_lines is defined and matomo_accounts_file_lines | int <= 3 ) or ( matomo_accounts_file_path.stat.exists is not defined ) or ( not matomo_accounts_file_path.stat.exists ) or ( matomo_logme is defined and matomo_logme | length > 0 and matomo_logme.status is defined and matomo_logme.status == 200 ) or ( matomo_account_login_password is defined and matomo_account_login_password | length == 0 ) or ( matomo_accounts_file_b64encoded.content | b64decode | from_yaml | type_debug != "list" )

  tags:
    - matomo
...
