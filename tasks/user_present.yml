---
- name: Matomo user present
  block:

    - name: Check variables
      assert:
        that:
          - ( matomo_login is defined ) and ( matomo_login is regex("^[a-zA-Z0-9-]{2,14}$") )
          - ( matomo_login_email is defined ) and ( matomo_login_email is regex("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$") )
          - ( matomo_token_auth is defined )
          - ( matomo_password is defined )
          - ( matomo_url is defined )
        msg: "Please ensure that all the required variables are defined"

    - name: Check that a Matomo superuser isn't being configured
      assert:
        that:
          - ( matomo_login != matomo_first_user )
          - ( matomo_login_email != matomo_first_user_email )
        msg: "Please use a different email address (or alias) and login username for the Matomo superuser and regular users"

    # TODO Use the UsersManager.getUsers API call with userLogins set to matomo_login to check that the matomo_login_email
    # matches the result, if it does than the get Matomo user login from email address tasks can be skipped

    - name: Include the get Matomo user login from email address tasks to potentially set matomo_login
      include_tasks: get_user_login_from_user_email.yml

    - name: "Check if a Matomo login named {{ matomo_login }} exists using the API"
      uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.userExists
          userLogin: "{{ matomo_login }}"
      register: matomo_api_user_exists

    - name: Debug matomo_api_user_exists
      debug:
        var: matomo_api_user_exists
        verbosity: 2

    - name: "Stat {{ matomo_accounts_file }}"
      stat:
        path: "{{ matomo_accounts_file }}"
      register: matomo_accounts_file_path
      when:
        - ( matomo_login != matomo_first_user )
        - ( matomo_login_email != matomo_first_user_email )
        - ( matomo_accounts_file is defined ) and ( matomo_accounts_file | length > 0 )
        - ( matomo_api_user_exists.json is defined )
        - ( matomo_api_user_exists.json.value is defined )
        - ( matomo_api_user_exists.json.value )

    - name: Include check Matomo user password tasks
      include_tasks: check_password.yml
      when:
        - ( matomo_login != matomo_first_user )
        - ( matomo_login_email != matomo_first_user_email )
        - ( matomo_accounts_file_path is defined ) and ( matomo_accounts_file_path.stat is defind ) and ( matomo_accounts_file_path.stat.exists )
        - ( matomo_api_user_exists.json is defined )
        - ( matomo_api_user_exists.json.value is defined )
        - ( matomo_api_user_exists.json.value )

    # When a login exists the username is returned:
    # matomo_api_get_user_login_from_user_email.json.value == "login"
    #
    # When a login doesn't exist:
    # matomo_api_get_user_login_from_user_email.json.result == "error"

    - name: Include update Matomo user email address tasks when the email address isn't used by an existing account
      include_tasks: update_email.yml
      when:
        - ( matomo_api_user_exists.json is defined )
        - ( matomo_api_user_exists.json.value is defined )
        - ( matomo_api_user_exists.json.value )
        - ( matomo_api_get_user_login_from_user_email is defined )
        - ( matomo_api_get_user_login_from_user_email.json is defined )
        - ( matomo_api_get_user_login_from_user_email.json.value is not defined )
        - ( matomo_api_get_user_login_from_user_email.json.result is defined )
        - ( matomo_api_get_user_login_from_user_email.json.result == "error" )
        - ( matomo_api_get_user_login_from_user_email.json.message is regex("^.*doesn\'t\ exist\.$") )

    - name: Include add Matomo user tasks
      include_tasks: add_user.yml
      when:
        - ( matomo_api_user_exists.json is defined )
        - ( matomo_api_user_exists.json.value is defined )
        - ( not matomo_api_user_exists.json.value )
        - ( matomo_api_get_user_login_from_user_email is defined )
        - ( matomo_api_get_user_login_from_user_email.json is defined )
        - ( matomo_api_get_user_login_from_user_email.json.value is not defined )
        - ( matomo_api_get_user_login_from_user_email.json.result is defined )
        - ( matomo_api_get_user_login_from_user_email.json.result == "error" )
        - ( matomo_api_get_user_login_from_user_email.json.message is regex("^.*doesn\'t\ exist\.$") )

    # - name: Include update Matomo user login tasks when the email address is used by another account

  tags:
    - matomo
...
