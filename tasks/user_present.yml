---
- name: Matomo user present
  block:

    - name: Check variables
      assert:
        that:
          - ( matomo_url is defined )
          - ( matomo_password is defined )
          - ( matomo_token_auth is defined )
          - ( matomo_login is defined ) and ( matomo_login is regex("^[a-zA-Z0-9-]{2,14}$") )
          - ( matomo_login_email is defined ) and ( matomo_login_email is regex("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$") )
        msg: "Please ensure that all the required variables are defined"

    - name: Check that a Matomo first user isn't being configured
      assert:
        that:
          - ( matomo_login != matomo_first_user )
          - ( matomo_login_email != matomo_first_user_email )
        msg: "Please use a different email address (or alias) and login username for the Matomo  first user and regular users"

    - name: "Get a list of the Matomo superusers for {{ matomo_url }}"
      uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.getUsersHavingSuperUserAccess
        status_code: 200
        return_content: true
      register: matomo_api_get_users_having_super_user_access
      changed_when: false
      failed_when: ( matomo_api_get_users_having_super_user_access.json is not defined )

    - name: Debug matomo_api_get_users_having_super_user_access
      debug:
        var: matomo_api_get_users_having_super_user_access
        verbosity: 2

    - name: Loop through the superusers accounts to check that we are not configuring one
      assert:
        that:
          - matomo_existing_superuser.login != matomo_login
          - matomo_existing_superuser.email != matomo_login_email
        msg: "Please use a different email address (or alias) and login username for the Matomo superuser and regular users"
      loop: "{{ matomo_api_get_users_having_super_user_access.json }}"
      loop_control:
        loop_var: matomo_existing_superuser
        label: "{{ matomo_existing_superuser.login }}" 

    - name: Set the matomo_login_existing to an empty value
      set_fact:
        matomo_login_existing: ""

    - name: "Check if a Matomo login with the email address {{ matomo_login_email }} exists using the API"
      uri:
        url: "{{ matomo_url }}"
        method: POST
        body_format: form-urlencoded
        body:
          module: API
          format: JSON
          token_auth: "{{ matomo_token_auth }}"
          method: UsersManager.getUserLoginFromUserEmail
          userEmail: "{{ matomo_login_email }}"
        status_code: 200
        return_content: true
      register: matomo_api_get_user_login_from_user_email
      changed_when: false
      failed_when: ( matomo_api_get_user_login_from_user_email.json is not defined )

    - name: Debug matomo_api_get_user_login_from_user_email
      debug:
        var: matomo_api_get_user_login_from_user_email
        verbosity: 2

    - name: "Include check for the {{ matomo_login }} existing when the {{ matomo_login_email }} doesn't exist"
      include_tasks: check_login.yml
      when: ( matomo_api_get_user_login_from_user_email.json.value is not defined )

    - name: Set matomo_login_existing and include password checks when the user exists
      block:

        - name: "Set the matomo_login_existing variable to {{ matomo_api_get_user_login_from_user_email.json.value }} as a Matomo account with a matching email address exists"
          set_fact:
            matomo_login_existing: "{{ matomo_api_get_user_login_from_user_email.json.value }}"

        - name: "Include the check password tasks when a user with the email address {{ matomo_login_email }} does exist"
          include_tasks: check_password.yml

      when: ( matomo_api_get_user_login_from_user_email.json.value is defined )

    - name: Set the matomo_login_existing variable to matomo_login when it is not defined
      set_fact:
        matomo_login_existing: "{{ matomo_login }}"
      when: ( matomo_login_existing is not defined ) or ( matomo_login_existing | length == 0 )

  tags:
    - matomo
...
